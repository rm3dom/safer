# Mostly untested

# Result types
java.util.Optional
java.util.OptionalInt
java.util.OptionalLong
java.util.OptionalDouble

# Collection operations
java.util.List.contains(*)
java.util.List.indexOf(*)
java.util.List.lastIndexOf(*)
java.util.List.subList(Int, Int)
java.util.List.toArray()
java.util.List.toArray(*)
java.util.ArrayList.contains(*)
java.util.ArrayList.indexOf(*)
java.util.ArrayList.lastIndexOf(*)
java.util.ArrayList.subList(Int, Int)
java.util.ArrayList.toArray()
java.util.ArrayList.toArray(*)
java.util.LinkedList.contains(*)
java.util.LinkedList.indexOf(*)
java.util.LinkedList.lastIndexOf(*)
java.util.LinkedList.subList(Int, Int)
java.util.LinkedList.toArray()
java.util.LinkedList.toArray(*)
java.util.Vector.contains(*)
java.util.Vector.indexOf(*)
java.util.Vector.lastIndexOf(*)
java.util.Vector.subList(Int, Int)
java.util.Vector.toArray()
java.util.Vector.toArray(*)

# Map operations
java.util.Map.containsKey(*)
java.util.Map.containsValue(*)
java.util.Map.entrySet()
java.util.Map.keySet()
java.util.Map.values()
java.util.HashMap.containsKey(*)
java.util.HashMap.containsValue(*)
java.util.HashMap.entrySet()
java.util.HashMap.keySet()
java.util.HashMap.values()
java.util.TreeMap.containsKey(*)
java.util.TreeMap.containsValue(*)
java.util.TreeMap.entrySet()
java.util.TreeMap.keySet()
java.util.TreeMap.values()
java.util.LinkedHashMap.containsKey(*)
java.util.LinkedHashMap.containsValue(*)
java.util.LinkedHashMap.entrySet()
java.util.LinkedHashMap.keySet()
java.util.LinkedHashMap.values()

# Set operations
java.util.Set.contains(*)
java.util.Set.toArray()
java.util.Set.toArray(*)
java.util.HashSet.contains(*)
java.util.HashSet.toArray()
java.util.HashSet.toArray(*)
java.util.TreeSet.contains(*)
java.util.TreeSet.toArray()
java.util.TreeSet.toArray(*)
java.util.LinkedHashSet.contains(*)
java.util.LinkedHashSet.toArray()
java.util.LinkedHashSet.toArray(*)

# String operations
java.lang.String.concat(String)
java.lang.String.contains(CharSequence)
java.lang.String.endsWith(String)
java.lang.String.equals(*)
java.lang.String.equalsIgnoreCase(String)
java.lang.String.indexOf(Int)
java.lang.String.indexOf(Int, Int)
java.lang.String.indexOf(String)
java.lang.String.indexOf(String, Int)
java.lang.String.lastIndexOf(Int)
java.lang.String.lastIndexOf(Int, Int)
java.lang.String.lastIndexOf(String)
java.lang.String.lastIndexOf(String, Int)
java.lang.String.matches(String)
java.lang.String.replace(Char, Char)
java.lang.String.replace(CharSequence, CharSequence)
java.lang.String.replaceAll(String, String)
java.lang.String.replaceFirst(String, String)
java.lang.String.split(String)
java.lang.String.split(String, Int)
java.lang.String.startsWith(String)
java.lang.String.startsWith(String, Int)
java.lang.String.substring(Int)
java.lang.String.substring(Int, Int)
java.lang.String.toLowerCase()
java.lang.String.toUpperCase()
java.lang.String.trim()

# File operations
java.io.File.delete()
java.io.File.mkdir()
java.io.File.mkdirs()
java.io.File.renameTo(java.io.File)
java.io.File.canExecute()
java.io.File.canRead()
java.io.File.canWrite()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.isFile()
java.io.File.isHidden()
java.io.File.list()
java.io.File.listFiles()
java.io.File.toPath()
java.io.File.toURI()

# Path operations
java.nio.file.Path.getFileName()
java.nio.file.Path.getName(Int)
java.nio.file.Path.getParent()
java.nio.file.Path.getRoot()
java.nio.file.Path.normalize()
java.nio.file.Path.relativize(java.nio.file.Path)
java.nio.file.Path.resolve(*)
java.nio.file.Path.resolveSibling(*)
java.nio.file.Path.subpath(Int, Int)
java.nio.file.Path.toAbsolutePath()
java.nio.file.Path.toFile()
java.nio.file.Path.toRealPath()
java.nio.file.Path.toUri()

# Files operations
java.nio.file.Files.createDirectories(java.nio.file.Path)
java.nio.file.Files.createDirectory(java.nio.file.Path)
java.nio.file.Files.createFile(java.nio.file.Path)
java.nio.file.Files.createLink(java.nio.file.Path, java.nio.file.Path)
java.nio.file.Files.createSymbolicLink(java.nio.file.Path, java.nio.file.Path)
java.nio.file.Files.createTempDirectory(java.nio.file.Path, String)
java.nio.file.Files.createTempDirectory(String)
java.nio.file.Files.createTempFile(java.nio.file.Path, String, String)
java.nio.file.Files.createTempFile(String, String)
java.nio.file.Files.delete(java.nio.file.Path)
java.nio.file.Files.deleteIfExists(java.nio.file.Path)
java.nio.file.Files.exists(java.nio.file.Path)
java.nio.file.Files.isDirectory(java.nio.file.Path)
java.nio.file.Files.isExecutable(java.nio.file.Path)
java.nio.file.Files.isHidden(java.nio.file.Path)
java.nio.file.Files.isReadable(java.nio.file.Path)
java.nio.file.Files.isRegularFile(java.nio.file.Path)
java.nio.file.Files.isSameFile(java.nio.file.Path, java.nio.file.Path)
java.nio.file.Files.isSymbolicLink(java.nio.file.Path)
java.nio.file.Files.isWritable(java.nio.file.Path)
java.nio.file.Files.list(java.nio.file.Path)
java.nio.file.Files.move(java.nio.file.Path, java.nio.file.Path)
java.nio.file.Files.newBufferedReader(java.nio.file.Path)
java.nio.file.Files.newBufferedWriter(java.nio.file.Path)
java.nio.file.Files.newDirectoryStream(java.nio.file.Path)
java.nio.file.Files.newInputStream(java.nio.file.Path)
java.nio.file.Files.newOutputStream(java.nio.file.Path)
java.nio.file.Files.readAllBytes(java.nio.file.Path)
java.nio.file.Files.readAllLines(java.nio.file.Path)
java.nio.file.Files.readString(java.nio.file.Path)
java.nio.file.Files.walk(java.nio.file.Path)
java.nio.file.Files.write(java.nio.file.Path, *)
java.nio.file.Files.writeString(java.nio.file.Path, CharSequence)

# Type conversions
java.lang.Boolean.valueOf(String)
java.lang.Byte.valueOf(String)
java.lang.Double.valueOf(String)
java.lang.Float.valueOf(String)
java.lang.Integer.valueOf(String)
java.lang.Long.valueOf(String)
java.lang.Short.valueOf(String)

# Regular expressions
java.util.regex.Pattern.compile(String)
java.util.regex.Pattern.matcher(CharSequence)
java.util.regex.Pattern.matches(String, CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group()
java.util.regex.Matcher.group(Int)
java.util.regex.Matcher.group(String)
java.util.regex.Matcher.matches()
java.util.regex.Matcher.pattern()
java.util.regex.Matcher.replaceAll(String)
java.util.regex.Matcher.replaceFirst(String)

# Streams
java.util.stream.Stream.collect(*)
java.util.stream.Stream.filter(*)
java.util.stream.Stream.findAny()
java.util.stream.Stream.findFirst()
java.util.stream.Stream.flatMap(*)
java.util.stream.Stream.map(*)
java.util.stream.Stream.max(*)
java.util.stream.Stream.min(*)
java.util.stream.Stream.reduce(*)
java.util.stream.Stream.sorted()
java.util.stream.Stream.sorted(*)
java.util.stream.Stream.toArray()
java.util.stream.Stream.toList()

# Concurrent utilities
java.util.concurrent.CompletableFuture.get()
java.util.concurrent.CompletableFuture.join()
java.util.concurrent.CompletableFuture.getNow(*)
java.util.concurrent.CompletableFuture.complete(*)
java.util.concurrent.CompletableFuture.completeExceptionally(Throwable)
java.util.concurrent.Future.get()
java.util.concurrent.Future.get(Long, *)
java.util.concurrent.Future.isDone()
java.util.concurrent.Future.isCancelled()
java.util.concurrent.atomic.AtomicBoolean.get()
java.util.concurrent.atomic.AtomicInteger.get()
java.util.concurrent.atomic.AtomicLong.get()
java.util.concurrent.atomic.AtomicReference.get()
